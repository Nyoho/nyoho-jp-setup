upstream tdiary {
       server localhost:8080;
}

upstream hiki {
       server localhost:9292;
}

server {
	listen 80;
	listen [::]:80;
	server_name nyoho.jp;

	root /var/www/nyoho.jp;
	index index.html index.htm;

	location /.well-known/acme-challenge/ { allow all; }
	location / { return 301 https://$host$request_uri; }
	# rewrite ^(.*)$ https://$host$1 permanent;
	# return 301 https://$host$request_uri; 
}

server {
	listen 443 default ssl;
	listen [::]:443 ssl;
	server_name localhost;

	root /var/www/nyoho.jp;
	index index.html index.htm;

	ssl on;
	ssl_certificate         /etc/letsencrypt/live/nyoho.jp/fullchain.pem;
	ssl_certificate_key     /etc/letsencrypt/live/nyoho.jp/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/nyoho.jp/fullchain.pem;

    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 5m;

    ssl_dhparam /etc/nginx/dhparams.pem;

	ssl_protocols TLSv1.2;
    ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
	# ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
	# ssl_ciphers EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    # ssl_ciphers "ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS";
	# ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains;';

	# TODO: add always
	add_header X-Content-Type-Options "nosniff";
	add_header X-Frame-Options "SAMEORIGIN";

	add_header X-Xss-Protection "1";
	# add_header Content-Security-Policy "default-src 'self'";

	ssl_stapling on;
	ssl_stapling_verify on;
	resolver 8.8.8.8;

	location / {
		try_files $uri $uri/ =404;

		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-Proto https;
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		proxy_redirect http:// https://;
	}

       location = /diary {
               rewrite ^ /diary/ redirect;
       }

       location = /tdiary {
               rewrite ^ /diary/ redirect;
       }

       location ~ ^/tdiary {
               rewrite ^/tdiary/(.*)$ /diary/$1 redirect;
       }

       location ~ ^/diary/ {
               rewrite ([0-9\-]+)\.html$ /diary/index.rb?date=$1 last;
	       proxy_set_header Host $host;
	       proxy_set_header X-Forwarded-Host $host;
               proxy_pass http://tdiary;
       }

       location = ^/wiki {
               rewrite ^ /wiki/ redirect;
       }

       location = ^/hiki {
               rewrite ^ /wiki/ redirect;
       }

       location ~ ^/hiki {
               rewrite ^/hiki/(.*)$ /wiki/$1 redirect;
       }

       location ~ ^/wiki/ {
               proxy_pass http://hiki;
               proxy_redirect http:// https://;
       }
}
